{"id":545497027,"lang":"python3","time":"1 day, 8 hours","timestamp":1630138312,"status_display":"Accepted","runtime":"204 ms","url":"/submissions/detail/545497027/","is_pending":"Not Pending","title":"Valid Mountain Array","memory":"15.5 MB","code":"class Solution:\n    def validMountainArray(self, arr: List[int]) -> bool:\n        #Retrieving the highest number within the list\n        highest = arr.index(max(arr))\n        #making sure the lest is more than 3 numbers\n        if len(arr) < 3:\n            return False\n        #Filtering the neighbours out\n        for i in range(len(arr)-1):\n            if arr[i] == arr[i+1]:\n                return False\n        #Making sure the last and the first number is not the highest\n        print(len(arr) - 1)\n        print(0)\n        if highest == len(arr)-1 or highest == 0:\n            return False\n        #splitting the two in\n        inc = arr[:highest]\n        dec = arr[highest:]\n        #if there is an increasing side and a decreasing side i just have to make sure both sides of the list are not             equal to the sorted version but for the decreased version i have to make sure that it doesnt equal it reversed             sorted cause its decreasing not increasing\n        if inc != sorted(inc):\n            return False\n        if dec != sorted(dec, reverse=True):\n            return False\n\n        return True","compare_result":"11111111111111111111111111111111111111111111111111111","title_slug":"valid-mountain-array"}